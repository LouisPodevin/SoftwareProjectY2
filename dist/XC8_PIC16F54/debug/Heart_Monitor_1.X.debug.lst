

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Apr 10 15:53:15 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	16F88
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.05
    21                           ; Generated 20/12/2018 GMT
    22                           ; 
    23                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F88 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  008C                     	;# 
    86  008D                     	;# 
    87  008E                     	;# 
    88  008F                     	;# 
    89  0090                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0094                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009B                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  0105                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000D                     	;# 
   118  000E                     	;# 
   119  000E                     	;# 
   120  000F                     	;# 
   121  0010                     	;# 
   122  0011                     	;# 
   123  0012                     	;# 
   124  0013                     	;# 
   125  0014                     	;# 
   126  0015                     	;# 
   127  0015                     	;# 
   128  0016                     	;# 
   129  0017                     	;# 
   130  0018                     	;# 
   131  0019                     	;# 
   132  001A                     	;# 
   133  001E                     	;# 
   134  001F                     	;# 
   135  0081                     	;# 
   136  0085                     	;# 
   137  0086                     	;# 
   138  008C                     	;# 
   139  008D                     	;# 
   140  008E                     	;# 
   141  008F                     	;# 
   142  0090                     	;# 
   143  0092                     	;# 
   144  0093                     	;# 
   145  0094                     	;# 
   146  0098                     	;# 
   147  0099                     	;# 
   148  009B                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009E                     	;# 
   152  009F                     	;# 
   153  0105                     	;# 
   154  010C                     	;# 
   155  010D                     	;# 
   156  010E                     	;# 
   157  010F                     	;# 
   158  018C                     	;# 
   159  018D                     	;# 
   160  0000                     	;# 
   161  0001                     	;# 
   162  0002                     	;# 
   163  0003                     	;# 
   164  0004                     	;# 
   165  0005                     	;# 
   166  0006                     	;# 
   167  000A                     	;# 
   168  000B                     	;# 
   169  000C                     	;# 
   170  000D                     	;# 
   171  000E                     	;# 
   172  000E                     	;# 
   173  000F                     	;# 
   174  0010                     	;# 
   175  0011                     	;# 
   176  0012                     	;# 
   177  0013                     	;# 
   178  0014                     	;# 
   179  0015                     	;# 
   180  0015                     	;# 
   181  0016                     	;# 
   182  0017                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  0081                     	;# 
   189  0085                     	;# 
   190  0086                     	;# 
   191  008C                     	;# 
   192  008D                     	;# 
   193  008E                     	;# 
   194  008F                     	;# 
   195  0090                     	;# 
   196  0092                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213  0000                     	;# 
   214  0001                     	;# 
   215  0002                     	;# 
   216  0003                     	;# 
   217  0004                     	;# 
   218  0005                     	;# 
   219  0006                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  008E                     	;# 
   247  008F                     	;# 
   248  0090                     	;# 
   249  0092                     	;# 
   250  0093                     	;# 
   251  0094                     	;# 
   252  0098                     	;# 
   253  0099                     	;# 
   254  009B                     	;# 
   255  009C                     	;# 
   256  009D                     	;# 
   257  009E                     	;# 
   258  009F                     	;# 
   259  0105                     	;# 
   260  010C                     	;# 
   261  010D                     	;# 
   262  010E                     	;# 
   263  010F                     	;# 
   264  018C                     	;# 
   265  018D                     	;# 
   266  0000                     	;# 
   267  0001                     	;# 
   268  0002                     	;# 
   269  0003                     	;# 
   270  0004                     	;# 
   271  0005                     	;# 
   272  0006                     	;# 
   273  000A                     	;# 
   274  000B                     	;# 
   275  000C                     	;# 
   276  000D                     	;# 
   277  000E                     	;# 
   278  000E                     	;# 
   279  000F                     	;# 
   280  0010                     	;# 
   281  0011                     	;# 
   282  0012                     	;# 
   283  0013                     	;# 
   284  0014                     	;# 
   285  0015                     	;# 
   286  0015                     	;# 
   287  0016                     	;# 
   288  0017                     	;# 
   289  0018                     	;# 
   290  0019                     	;# 
   291  001A                     	;# 
   292  001E                     	;# 
   293  001F                     	;# 
   294  0081                     	;# 
   295  0085                     	;# 
   296  0086                     	;# 
   297  008C                     	;# 
   298  008D                     	;# 
   299  008E                     	;# 
   300  008F                     	;# 
   301  0090                     	;# 
   302  0092                     	;# 
   303  0093                     	;# 
   304  0094                     	;# 
   305  0098                     	;# 
   306  0099                     	;# 
   307  009B                     	;# 
   308  009C                     	;# 
   309  009D                     	;# 
   310  009E                     	;# 
   311  009F                     	;# 
   312  0105                     	;# 
   313  010C                     	;# 
   314  010D                     	;# 
   315  010E                     	;# 
   316  010F                     	;# 
   317  018C                     	;# 
   318  018D                     	;# 
   319  0000                     	;# 
   320  0001                     	;# 
   321  0002                     	;# 
   322  0003                     	;# 
   323  0004                     	;# 
   324  0005                     	;# 
   325  0006                     	;# 
   326  000A                     	;# 
   327  000B                     	;# 
   328  000C                     	;# 
   329  000D                     	;# 
   330  000E                     	;# 
   331  000E                     	;# 
   332  000F                     	;# 
   333  0010                     	;# 
   334  0011                     	;# 
   335  0012                     	;# 
   336  0013                     	;# 
   337  0014                     	;# 
   338  0015                     	;# 
   339  0015                     	;# 
   340  0016                     	;# 
   341  0017                     	;# 
   342  0018                     	;# 
   343  0019                     	;# 
   344  001A                     	;# 
   345  001E                     	;# 
   346  001F                     	;# 
   347  0081                     	;# 
   348  0085                     	;# 
   349  0086                     	;# 
   350  008C                     	;# 
   351  008D                     	;# 
   352  008E                     	;# 
   353  008F                     	;# 
   354  0090                     	;# 
   355  0092                     	;# 
   356  0093                     	;# 
   357  0094                     	;# 
   358  0098                     	;# 
   359  0099                     	;# 
   360  009B                     	;# 
   361  009C                     	;# 
   362  009D                     	;# 
   363  009E                     	;# 
   364  009F                     	;# 
   365  0105                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  018C                     	;# 
   371  018D                     	;# 
   372  000E                     _TMR1	set	14
   373  0005                     _PORTA	set	5
   374  0006                     _PORTB	set	6
   375  005F                     _GIE	set	95
   376  005E                     _PEIE	set	94
   377  0081                     _TMR1CS	set	129
   378  0080                     _TMR1ON	set	128
   379  002C                     _RA4	set	44
   380  0060                     _TMR1IF	set	96
   381  0086                     _TRISB	set	134
   382  0085                     _TRISA	set	133
   383  009B                     _ANSEL	set	155
   384  0460                     _TMR1IE	set	1120
   385  047C                     _IRCF0	set	1148
   386  047D                     _IRCF1	set	1149
   387  047E                     _IRCF2	set	1150
   388                           
   389                           ; #config settings
   390  0000                     
   391                           	psect	cinit
   392  000D                     start_initialization:	
   393  000D                     __initialization:	
   394                           
   395                           ; Clear objects allocated to COMMON
   396  000D  01F7               	clrf	__pbssCOMMON& (0+127)
   397  000E  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   398  000F  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   399  0010  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   400                           
   401                           ; Clear objects allocated to BANK0
   402  0011  1283               	bcf	3,5	;RP0=0, select bank0
   403  0012  1303               	bcf	3,6	;RP1=0, select bank0
   404  0013  01A5               	clrf	__pbssBANK0& (0+127)
   405  0014  01A6               	clrf	(__pbssBANK0+1)& (0+127)
   406  0015  01A7               	clrf	(__pbssBANK0+2)& (0+127)
   407  0016                     end_of_initialization:	
   408                           ;End of C runtime variable initialization code
   409                           
   410  0016                     __end_of__initialization:	
   411  0016  0183               	clrf	3
   412  0017  118A  2819         	ljmp	_main	;jump to C main() function
   413                           
   414                           	psect	bssCOMMON
   415  0077                     __pbssCOMMON:	
   416  0077                     _DISPLAY:	
   417  0077                     	ds	1
   418  0078                     _temp:	
   419  0078                     	ds	1
   420  0079                     _prevValue:	
   421  0079                     	ds	1
   422  007A                     _count:	
   423  007A                     	ds	1
   424                           
   425                           	psect	bssBANK0
   426  0025                     __pbssBANK0:	
   427  0025                     _temp2:	
   428  0025                     	ds	1
   429  0026                     _buffer:	
   430  0026                     	ds	1
   431  0027                     _heartbeat:	
   432  0027                     	ds	1
   433                           
   434                           	psect	cstackCOMMON
   435  0070                     __pcstackCOMMON:	
   436  0070                     ?_ConfigureOscillator:	
   437  0070                     ?_InitApp:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_isr:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ??_isr:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_main:	
   447                           ; 1 bytes @ 0x0
   448                           
   449                           
   450                           ; 1 bytes @ 0x0
   451  0070                     	ds	3
   452  0073                     ??_ConfigureOscillator:	
   453  0073                     ??_InitApp:	
   454                           ; 1 bytes @ 0x3
   455                           
   456  0073                     ?_display:	
   457                           ; 1 bytes @ 0x3
   458                           
   459  0073                     ?___bmul:	
   460                           ; 1 bytes @ 0x3
   461                           
   462  0073                     ?___lbdiv:	
   463                           ; 1 bytes @ 0x3
   464                           
   465  0073                     ?___lbmod:	
   466                           ; 1 bytes @ 0x3
   467                           
   468  0073                     ___bmul@multiplicand:	
   469                           ; 1 bytes @ 0x3
   470                           
   471  0073                     ___lbdiv@divisor:	
   472                           ; 1 bytes @ 0x3
   473                           
   474  0073                     ___lbmod@divisor:	
   475                           ; 1 bytes @ 0x3
   476                           
   477  0073                     display@DISPLAY:	
   478                           ; 1 bytes @ 0x3
   479                           
   480                           
   481                           ; 2 bytes @ 0x3
   482  0073                     	ds	1
   483  0074                     ??___bmul:	
   484  0074                     ??___lbdiv:	
   485                           ; 1 bytes @ 0x4
   486                           
   487  0074                     ??___lbmod:	
   488                           ; 1 bytes @ 0x4
   489                           
   490                           
   491                           ; 1 bytes @ 0x4
   492  0074                     	ds	1
   493  0075                     ??_display:	
   494  0075                     ___bmul@product:	
   495                           ; 1 bytes @ 0x5
   496                           
   497                           
   498                           ; 1 bytes @ 0x5
   499  0075                     	ds	1
   500  0076                     ___bmul@multiplier:	
   501                           
   502                           ; 1 bytes @ 0x6
   503  0076                     	ds	1
   504                           
   505                           	psect	cstackBANK0
   506  0020                     __pcstackBANK0:	
   507  0020                     ___lbdiv@dividend:	
   508  0020                     ___lbmod@dividend:	
   509                           ; 1 bytes @ 0x0
   510                           
   511                           
   512                           ; 1 bytes @ 0x0
   513  0020                     	ds	1
   514  0021                     ___lbdiv@counter:	
   515  0021                     ___lbmod@counter:	
   516                           ; 1 bytes @ 0x1
   517                           
   518                           
   519                           ; 1 bytes @ 0x1
   520  0021                     	ds	1
   521  0022                     ___lbdiv@quotient:	
   522  0022                     ___lbmod@rem:	
   523                           ; 1 bytes @ 0x2
   524                           
   525                           
   526                           ; 1 bytes @ 0x2
   527  0022                     	ds	1
   528  0023                     ??_main:	
   529                           
   530                           ; 1 bytes @ 0x3
   531  0023                     	ds	2
   532                           
   533                           	psect	maintext
   534  0019                     __pmaintext:	
   535 ;;
   536 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   537 ;;
   538 ;; *************** function _main *****************
   539 ;; Defined at:
   540 ;;		line 85 in file "main.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;		None
   543 ;; Auto vars:     Size  Location     Type
   544 ;;		None
   545 ;; Return value:  Size  Location     Type
   546 ;;                  1    wreg      void 
   547 ;; Registers used:
   548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   549 ;; Tracked objects:
   550 ;;		On entry : B00/0
   551 ;;		On exit  : 300/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   554 ;;      Params:         0       0       0       0       0
   555 ;;      Locals:         0       0       0       0       0
   556 ;;      Temps:          0       2       0       0       0
   557 ;;      Totals:         0       2       0       0       0
   558 ;;Total ram usage:        2 bytes
   559 ;; Hardware stack levels required when called:    2
   560 ;; This function calls:
   561 ;;		_ConfigureOscillator
   562 ;;		_InitApp
   563 ;;		___bmul
   564 ;;		___lbdiv
   565 ;;		___lbmod
   566 ;;		_display
   567 ;; This function is called by:
   568 ;;		Startup code after reset
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           
   573                           ;psect for function _main
   574  0019                     _main:	
   575                           
   576                           ;main.c: 88: ConfigureOscillator();
   577                           
   578                           ;incstack = 0
   579                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   580  0019  118A  2194  118A   	fcall	_ConfigureOscillator
   581                           
   582                           ;main.c: 91: InitApp();
   583  001C  118A  2184  118A   	fcall	_InitApp
   584  001F                     l1069:	
   585                           
   586                           ;main.c: 94: {;main.c: 97: if ( (RA4 == 1)&&(prevValue == 0) )
   587  001F  1283               	bcf	3,5	;RP0=0, select bank0
   588  0020  1E05               	btfss	5,4	;volatile
   589  0021  282B               	goto	l1077
   590  0022  0879               	movf	_prevValue,w
   591  0023  1D03               	btfss	3,2
   592  0024  282B               	goto	l1077
   593                           
   594                           ;main.c: 98: {;main.c: 99: heartbeat ++;
   595  0025  3001               	movlw	1
   596  0026  00A3               	movwf	??_main
   597  0027  0823               	movf	??_main,w
   598  0028  07A7               	addwf	_heartbeat,f
   599                           
   600                           ;main.c: 100: prevValue = 1;
   601  0029  01F9               	clrf	_prevValue
   602  002A  0AF9               	incf	_prevValue,f
   603  002B                     l1077:	
   604                           
   605                           ;main.c: 101: };main.c: 103: if ((RA4 == 0)&&(prevValue == 1))
   606  002B  1A05               	btfsc	5,4	;volatile
   607  002C  2831               	goto	l1083
   608  002D  0379               	decf	_prevValue,w
   609  002E  1D03               	btfss	3,2
   610  002F  2831               	goto	l1083
   611                           
   612                           ;main.c: 104: {;main.c: 105: prevValue = 0;
   613  0030  01F9               	clrf	_prevValue
   614  0031                     l1083:	
   615                           
   616                           ;main.c: 106: };main.c: 109: if (count >= 200) {
   617  0031  30C8               	movlw	200
   618  0032  027A               	subwf	_count,w
   619  0033  1C03               	skipc
   620  0034  283A               	goto	l1089
   621                           
   622                           ;main.c: 110: buffer++;
   623  0035  3001               	movlw	1
   624  0036  00A3               	movwf	??_main
   625  0037  0823               	movf	??_main,w
   626  0038  07A6               	addwf	_buffer,f
   627                           
   628                           ;main.c: 111: count = 0;
   629  0039  01FA               	clrf	_count
   630  003A                     l1089:	
   631                           
   632                           ;main.c: 112: };main.c: 114: if (buffer >= 1) {
   633  003A  0826               	movf	_buffer,w
   634  003B  1903               	btfsc	3,2
   635  003C  281F               	goto	l1069
   636                           
   637                           ;main.c: 116: count = 0;
   638  003D  01FA               	clrf	_count
   639                           
   640                           ;main.c: 117: temp = 6*heartbeat;
   641  003E  3006               	movlw	6
   642  003F  00A3               	movwf	??_main
   643  0040  0823               	movf	??_main,w
   644  0041  00F3               	movwf	___bmul@multiplicand
   645  0042  0827               	movf	_heartbeat,w
   646  0043  118A  2173  118A   	fcall	___bmul
   647  0046  00A4               	movwf	??_main+1
   648  0047  0824               	movf	??_main+1,w
   649  0048  00F8               	movwf	_temp
   650  0049                     l1125:	
   651                           ;main.c: 119: while (count <= 200) {
   652                           
   653  0049  30C9               	movlw	201
   654  004A  027A               	subwf	_count,w
   655  004B  1803               	btfsc	3,0
   656  004C  28D0               	goto	l1127
   657                           
   658                           ;main.c: 121: PORTA = 0b100;
   659  004D  3004               	movlw	4
   660  004E  1283               	bcf	3,5	;RP0=0, select bank0
   661  004F  1303               	bcf	3,6	;RP1=0, select bank0
   662  0050  0085               	movwf	5	;volatile
   663                           
   664                           ;main.c: 122: DISPLAY = (temp%10);
   665  0051  300A               	movlw	10
   666  0052  00A3               	movwf	??_main
   667  0053  0823               	movf	??_main,w
   668  0054  00F3               	movwf	___lbmod@divisor
   669  0055  0878               	movf	_temp,w
   670  0056  118A  211A  118A   	fcall	___lbmod
   671  0059  00A4               	movwf	??_main+1
   672  005A  0824               	movf	??_main+1,w
   673  005B  00F7               	movwf	_DISPLAY
   674                           
   675                           ;main.c: 123: display(DISPLAY);
   676  005C  0877               	movf	_DISPLAY,w
   677  005D  00A3               	movwf	??_main
   678  005E  01A4               	clrf	??_main+1
   679  005F  0823               	movf	??_main,w
   680  0060  00F3               	movwf	display@DISPLAY
   681  0061  0824               	movf	??_main+1,w
   682  0062  00F4               	movwf	display@DISPLAY+1
   683  0063  118A  20D6  118A   	fcall	_display
   684                           
   685                           ;main.c: 124: _delay((unsigned long)((100)*(4000000/4000.0)));
   686  0066  3082               	movlw	130
   687  0067  1283               	bcf	3,5	;RP0=0, select bank0
   688  0068  1303               	bcf	3,6	;RP1=0, select bank0
   689  0069  00A4               	movwf	??_main+1
   690  006A  30DD               	movlw	221
   691  006B  00A3               	movwf	??_main
   692  006C                     u477:	
   693  006C  0BA3               	decfsz	??_main,f
   694  006D  286C               	goto	u477
   695  006E  0BA4               	decfsz	??_main+1,f
   696  006F  286C               	goto	u477
   697                           
   698                           ;main.c: 126: PORTA = 0b010;
   699  0070  3002               	movlw	2
   700  0071  1283               	bcf	3,5	;RP0=0, select bank0
   701  0072  1303               	bcf	3,6	;RP1=0, select bank0
   702  0073  0085               	movwf	5	;volatile
   703                           
   704                           ;main.c: 127: DISPLAY = temp - DISPLAY;
   705  0074  0877               	movf	_DISPLAY,w
   706  0075  0278               	subwf	_temp,w
   707  0076  00A3               	movwf	??_main
   708  0077  0823               	movf	??_main,w
   709  0078  00F7               	movwf	_DISPLAY
   710                           
   711                           ;main.c: 128: DISPLAY = (DISPLAY / 10);
   712  0079  300A               	movlw	10
   713  007A  00A3               	movwf	??_main
   714  007B  0823               	movf	??_main,w
   715  007C  00F3               	movwf	___lbdiv@divisor
   716  007D  0877               	movf	_DISPLAY,w
   717  007E  118A  213D  118A   	fcall	___lbdiv
   718  0081  00A4               	movwf	??_main+1
   719  0082  0824               	movf	??_main+1,w
   720  0083  00F7               	movwf	_DISPLAY
   721                           
   722                           ;main.c: 129: temp2 = DISPLAY;
   723  0084  0877               	movf	_DISPLAY,w
   724  0085  00A3               	movwf	??_main
   725  0086  0823               	movf	??_main,w
   726  0087  00A5               	movwf	_temp2
   727                           
   728                           ;main.c: 130: DISPLAY = (DISPLAY % 10);
   729  0088  300A               	movlw	10
   730  0089  00A3               	movwf	??_main
   731  008A  0823               	movf	??_main,w
   732  008B  00F3               	movwf	___lbmod@divisor
   733  008C  0877               	movf	_DISPLAY,w
   734  008D  118A  211A  118A   	fcall	___lbmod
   735  0090  00A4               	movwf	??_main+1
   736  0091  0824               	movf	??_main+1,w
   737  0092  00F7               	movwf	_DISPLAY
   738                           
   739                           ;main.c: 131: display(DISPLAY);
   740  0093  0877               	movf	_DISPLAY,w
   741  0094  00A3               	movwf	??_main
   742  0095  01A4               	clrf	??_main+1
   743  0096  0823               	movf	??_main,w
   744  0097  00F3               	movwf	display@DISPLAY
   745  0098  0824               	movf	??_main+1,w
   746  0099  00F4               	movwf	display@DISPLAY+1
   747  009A  118A  20D6  118A   	fcall	_display
   748                           
   749                           ;main.c: 132: _delay((unsigned long)((100)*(4000000/4000.0)));
   750  009D  3082               	movlw	130
   751  009E  1283               	bcf	3,5	;RP0=0, select bank0
   752  009F  1303               	bcf	3,6	;RP1=0, select bank0
   753  00A0  00A4               	movwf	??_main+1
   754  00A1  30DD               	movlw	221
   755  00A2  00A3               	movwf	??_main
   756  00A3                     u487:	
   757  00A3  0BA3               	decfsz	??_main,f
   758  00A4  28A3               	goto	u487
   759  00A5  0BA4               	decfsz	??_main+1,f
   760  00A6  28A3               	goto	u487
   761                           
   762                           ;main.c: 134: PORTA = 0b001;
   763  00A7  3001               	movlw	1
   764  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   765  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   766  00AA  0085               	movwf	5	;volatile
   767                           
   768                           ;main.c: 135: DISPLAY = temp2 - DISPLAY;
   769  00AB  0877               	movf	_DISPLAY,w
   770  00AC  0225               	subwf	_temp2,w
   771  00AD  00A3               	movwf	??_main
   772  00AE  0823               	movf	??_main,w
   773  00AF  00F7               	movwf	_DISPLAY
   774                           
   775                           ;main.c: 136: DISPLAY = (DISPLAY / 10);
   776  00B0  300A               	movlw	10
   777  00B1  00A3               	movwf	??_main
   778  00B2  0823               	movf	??_main,w
   779  00B3  00F3               	movwf	___lbdiv@divisor
   780  00B4  0877               	movf	_DISPLAY,w
   781  00B5  118A  213D  118A   	fcall	___lbdiv
   782  00B8  00A4               	movwf	??_main+1
   783  00B9  0824               	movf	??_main+1,w
   784  00BA  00F7               	movwf	_DISPLAY
   785                           
   786                           ;main.c: 137: display(DISPLAY);
   787  00BB  0877               	movf	_DISPLAY,w
   788  00BC  00A3               	movwf	??_main
   789  00BD  01A4               	clrf	??_main+1
   790  00BE  0823               	movf	??_main,w
   791  00BF  00F3               	movwf	display@DISPLAY
   792  00C0  0824               	movf	??_main+1,w
   793  00C1  00F4               	movwf	display@DISPLAY+1
   794  00C2  118A  20D6  118A   	fcall	_display
   795                           
   796                           ;main.c: 138: _delay((unsigned long)((100)*(4000000/4000.0)));
   797  00C5  3082               	movlw	130
   798  00C6  1283               	bcf	3,5	;RP0=0, select bank0
   799  00C7  1303               	bcf	3,6	;RP1=0, select bank0
   800  00C8  00A4               	movwf	??_main+1
   801  00C9  30DD               	movlw	221
   802  00CA  00A3               	movwf	??_main
   803  00CB                     u497:	
   804  00CB  0BA3               	decfsz	??_main,f
   805  00CC  28CB               	goto	u497
   806  00CD  0BA4               	decfsz	??_main+1,f
   807  00CE  28CB               	goto	u497
   808  00CF  2849               	goto	l1125
   809  00D0                     l1127:	
   810                           
   811                           ;main.c: 139: };main.c: 141: heartbeat = 0;
   812  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   813  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   814  00D2  01A7               	clrf	_heartbeat
   815                           
   816                           ;main.c: 142: count = 0;
   817  00D3  01FA               	clrf	_count
   818                           
   819                           ;main.c: 143: buffer = 0;
   820  00D4  01A6               	clrf	_buffer
   821  00D5  281F               	goto	l1069
   822  00D6                     __end_of_main:	
   823                           
   824                           	psect	text1
   825  00D6                     __ptext1:	
   826 ;; *************** function _display *****************
   827 ;; Defined at:
   828 ;;		line 47 in file "main.c"
   829 ;; Parameters:    Size  Location     Type
   830 ;;  DISPLAY         2    3[COMMON] int 
   831 ;; Auto vars:     Size  Location     Type
   832 ;;		None
   833 ;; Return value:  Size  Location     Type
   834 ;;                  1    wreg      void 
   835 ;; Registers used:
   836 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   837 ;; Tracked objects:
   838 ;;		On entry : 300/0
   839 ;;		On exit  : 300/0
   840 ;;		Unchanged: 0/0
   841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   842 ;;      Params:         2       0       0       0       0
   843 ;;      Locals:         0       0       0       0       0
   844 ;;      Temps:          0       0       0       0       0
   845 ;;      Totals:         2       0       0       0       0
   846 ;;Total ram usage:        2 bytes
   847 ;; Hardware stack levels used:    1
   848 ;; Hardware stack levels required when called:    1
   849 ;; This function calls:
   850 ;;		Nothing
   851 ;; This function is called by:
   852 ;;		_main
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           
   857                           ;psect for function _display
   858  00D6                     _display:	
   859                           
   860                           ;main.c: 49: switch (DISPLAY) {
   861                           
   862                           ;incstack = 0
   863                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0]
   864  00D6  28F4               	goto	l847
   865  00D7                     l825:	
   866                           
   867                           ;main.c: 51: PORTB = 0x40;
   868  00D7  3040               	movlw	64
   869  00D8  0086               	movwf	6	;volatile
   870                           
   871                           ;main.c: 52: break;
   872  00D9  0008               	return
   873  00DA                     l827:	
   874                           
   875                           ;main.c: 54: PORTB = 0x79;
   876  00DA  3079               	movlw	121
   877  00DB  0086               	movwf	6	;volatile
   878                           
   879                           ;main.c: 55: break;
   880  00DC  0008               	return
   881  00DD                     l829:	
   882                           
   883                           ;main.c: 57: PORTB = 0x24;
   884  00DD  3024               	movlw	36
   885  00DE  0086               	movwf	6	;volatile
   886                           
   887                           ;main.c: 58: break;
   888  00DF  0008               	return
   889  00E0                     l831:	
   890                           
   891                           ;main.c: 60: PORTB = 0x30;
   892  00E0  3030               	movlw	48
   893  00E1  0086               	movwf	6	;volatile
   894                           
   895                           ;main.c: 61: break;
   896  00E2  0008               	return
   897  00E3                     l833:	
   898                           
   899                           ;main.c: 63: PORTB = 0x19;
   900  00E3  3019               	movlw	25
   901  00E4  0086               	movwf	6	;volatile
   902                           
   903                           ;main.c: 64: break;
   904  00E5  0008               	return
   905  00E6                     l835:	
   906                           
   907                           ;main.c: 66: PORTB = 0x12;
   908  00E6  3012               	movlw	18
   909  00E7  0086               	movwf	6	;volatile
   910                           
   911                           ;main.c: 67: break;
   912  00E8  0008               	return
   913  00E9                     l837:	
   914                           
   915                           ;main.c: 69: PORTB = 0x02;
   916  00E9  3002               	movlw	2
   917  00EA  0086               	movwf	6	;volatile
   918                           
   919                           ;main.c: 70: break;
   920  00EB  0008               	return
   921  00EC                     l839:	
   922                           
   923                           ;main.c: 72: PORTB = 0x78;
   924  00EC  3078               	movlw	120
   925  00ED  0086               	movwf	6	;volatile
   926                           
   927                           ;main.c: 73: break;
   928  00EE  0008               	return
   929  00EF                     l841:	
   930                           
   931                           ;main.c: 75: PORTB = 0x00;
   932  00EF  0186               	clrf	6	;volatile
   933                           
   934                           ;main.c: 76: break;
   935  00F0  0008               	return
   936  00F1                     l843:	
   937                           
   938                           ;main.c: 78: PORTB = 0x10;
   939  00F1  3010               	movlw	16
   940  00F2  0086               	movwf	6	;volatile
   941                           
   942                           ;main.c: 79: break;
   943  00F3  0008               	return
   944  00F4                     l847:	
   945                           
   946                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   947                           ; Switch size 1, requested type "simple"
   948                           ; Number of cases is 1, Range of values is 0 to 0
   949                           ; switch strategies available:
   950                           ; Name         Instructions Cycles
   951                           ; simple_byte            4     3 (average)
   952                           ; direct_byte            9     7 (fixed)
   953                           ; jumptable            260     6 (fixed)
   954                           ;	Chosen strategy is simple_byte
   955  00F4  0874               	movf	display@DISPLAY+1,w
   956  00F5  3A00               	xorlw	0	; case 0
   957  00F6  1903               	skipnz
   958  00F7  28F9               	goto	l1149
   959  00F8  2919               	goto	l53
   960  00F9                     l1149:	
   961                           
   962                           ; Switch size 1, requested type "simple"
   963                           ; Number of cases is 10, Range of values is 0 to 9
   964                           ; switch strategies available:
   965                           ; Name         Instructions Cycles
   966                           ; direct_byte           27     7 (fixed)
   967                           ; simple_byte           31    16 (average)
   968                           ; jumptable            260     6 (fixed)
   969                           ;	Chosen strategy is simple_byte
   970  00F9  0873               	movf	display@DISPLAY,w
   971  00FA  3A00               	xorlw	0	; case 0
   972  00FB  1903               	skipnz
   973  00FC  28D7               	goto	l825
   974  00FD  3A01               	xorlw	1	; case 1
   975  00FE  1903               	skipnz
   976  00FF  28DA               	goto	l827
   977  0100  3A03               	xorlw	3	; case 2
   978  0101  1903               	skipnz
   979  0102  28DD               	goto	l829
   980  0103  3A01               	xorlw	1	; case 3
   981  0104  1903               	skipnz
   982  0105  28E0               	goto	l831
   983  0106  3A07               	xorlw	7	; case 4
   984  0107  1903               	skipnz
   985  0108  28E3               	goto	l833
   986  0109  3A01               	xorlw	1	; case 5
   987  010A  1903               	skipnz
   988  010B  28E6               	goto	l835
   989  010C  3A03               	xorlw	3	; case 6
   990  010D  1903               	skipnz
   991  010E  28E9               	goto	l837
   992  010F  3A01               	xorlw	1	; case 7
   993  0110  1903               	skipnz
   994  0111  28EC               	goto	l839
   995  0112  3A0F               	xorlw	15	; case 8
   996  0113  1903               	skipnz
   997  0114  28EF               	goto	l841
   998  0115  3A01               	xorlw	1	; case 9
   999  0116  1903               	skipnz
  1000  0117  28F1               	goto	l843
  1001  0118  2919               	goto	l53
  1002  0119                     l53:	
  1003  0119  0008               	return
  1004  011A                     __end_of_display:	
  1005                           
  1006                           	psect	text2
  1007  011A                     __ptext2:	
  1008 ;; *************** function ___lbmod *****************
  1009 ;; Defined at:
  1010 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lbmod.c"
  1011 ;; Parameters:    Size  Location     Type
  1012 ;;  dividend        1    wreg     unsigned char 
  1013 ;;  divisor         1    3[COMMON] unsigned char 
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;  dividend        1    0[BANK0 ] unsigned char 
  1016 ;;  rem             1    2[BANK0 ] unsigned char 
  1017 ;;  counter         1    1[BANK0 ] unsigned char 
  1018 ;; Return value:  Size  Location     Type
  1019 ;;                  1    wreg      unsigned char 
  1020 ;; Registers used:
  1021 ;;		wreg, status,2, status,0
  1022 ;; Tracked objects:
  1023 ;;		On entry : 300/0
  1024 ;;		On exit  : 300/0
  1025 ;;		Unchanged: 0/0
  1026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1027 ;;      Params:         1       0       0       0       0
  1028 ;;      Locals:         0       3       0       0       0
  1029 ;;      Temps:          3       0       0       0       0
  1030 ;;      Totals:         4       3       0       0       0
  1031 ;;Total ram usage:        7 bytes
  1032 ;; Hardware stack levels used:    1
  1033 ;; Hardware stack levels required when called:    1
  1034 ;; This function calls:
  1035 ;;		Nothing
  1036 ;; This function is called by:
  1037 ;;		_main
  1038 ;; This function uses a non-reentrant model
  1039 ;;
  1040                           
  1041                           
  1042                           ;psect for function ___lbmod
  1043  011A                     ___lbmod:	
  1044                           
  1045                           ;incstack = 0
  1046                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  1047                           ;___lbmod@dividend stored from wreg
  1048  011A  00A0               	movwf	___lbmod@dividend
  1049  011B  3008               	movlw	8
  1050  011C  00F4               	movwf	??___lbmod
  1051  011D  0874               	movf	??___lbmod,w
  1052  011E  00A1               	movwf	___lbmod@counter
  1053  011F  01A2               	clrf	___lbmod@rem
  1054  0120                     l1053:	
  1055  0120  0820               	movf	___lbmod@dividend,w
  1056  0121  00F4               	movwf	??___lbmod
  1057  0122  3007               	movlw	7
  1058  0123                     u375:	
  1059  0123  1003               	clrc
  1060  0124  0CF4               	rrf	??___lbmod,f
  1061  0125  3EFF               	addlw	-1
  1062  0126  1D03               	skipz
  1063  0127  2923               	goto	u375
  1064  0128  0822               	movf	___lbmod@rem,w
  1065  0129  00F5               	movwf	??___lbmod+1
  1066  012A  0775               	addwf	??___lbmod+1,w
  1067  012B  0474               	iorwf	??___lbmod,w
  1068  012C  00F6               	movwf	??___lbmod+2
  1069  012D  0876               	movf	??___lbmod+2,w
  1070  012E  00A2               	movwf	___lbmod@rem
  1071  012F  1003               	clrc
  1072  0130  0DA0               	rlf	___lbmod@dividend,f
  1073  0131  0873               	movf	___lbmod@divisor,w
  1074  0132  0222               	subwf	___lbmod@rem,w
  1075  0133  1C03               	skipc
  1076  0134  2937               	goto	l502
  1077  0135  0873               	movf	___lbmod@divisor,w
  1078  0136  02A2               	subwf	___lbmod@rem,f
  1079  0137                     l502:	
  1080  0137  3001               	movlw	1
  1081  0138  02A1               	subwf	___lbmod@counter,f
  1082  0139  1D03               	btfss	3,2
  1083  013A  2920               	goto	l1053
  1084  013B  0822               	movf	___lbmod@rem,w
  1085  013C  0008               	return
  1086  013D                     __end_of___lbmod:	
  1087                           
  1088                           	psect	text3
  1089  013D                     __ptext3:	
  1090 ;; *************** function ___lbdiv *****************
  1091 ;; Defined at:
  1092 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lbdiv.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;  dividend        1    wreg     unsigned char 
  1095 ;;  divisor         1    3[COMMON] unsigned char 
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;  dividend        1    0[BANK0 ] unsigned char 
  1098 ;;  quotient        1    2[BANK0 ] unsigned char 
  1099 ;;  counter         1    1[BANK0 ] unsigned char 
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      unsigned char 
  1102 ;; Registers used:
  1103 ;;		wreg, status,2, status,0
  1104 ;; Tracked objects:
  1105 ;;		On entry : 300/0
  1106 ;;		On exit  : 300/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1109 ;;      Params:         1       0       0       0       0
  1110 ;;      Locals:         0       3       0       0       0
  1111 ;;      Temps:          1       0       0       0       0
  1112 ;;      Totals:         2       3       0       0       0
  1113 ;;Total ram usage:        5 bytes
  1114 ;; Hardware stack levels used:    1
  1115 ;; Hardware stack levels required when called:    1
  1116 ;; This function calls:
  1117 ;;		Nothing
  1118 ;; This function is called by:
  1119 ;;		_main
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           
  1124                           ;psect for function ___lbdiv
  1125  013D                     ___lbdiv:	
  1126                           
  1127                           ;incstack = 0
  1128                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  1129                           ;___lbdiv@dividend stored from wreg
  1130  013D  00A0               	movwf	___lbdiv@dividend
  1131  013E  01A2               	clrf	___lbdiv@quotient
  1132  013F  0873               	movf	___lbdiv@divisor,w
  1133  0140  1903               	btfsc	3,2
  1134  0141  295C               	goto	l1045
  1135  0142  01A1               	clrf	___lbdiv@counter
  1136  0143  0AA1               	incf	___lbdiv@counter,f
  1137  0144                     l1033:	
  1138  0144  1BF3               	btfsc	___lbdiv@divisor,7
  1139  0145  294D               	goto	l1035
  1140  0146  1003               	clrc
  1141  0147  0DF3               	rlf	___lbdiv@divisor,f
  1142  0148  3001               	movlw	1
  1143  0149  00F4               	movwf	??___lbdiv
  1144  014A  0874               	movf	??___lbdiv,w
  1145  014B  07A1               	addwf	___lbdiv@counter,f
  1146  014C  2944               	goto	l1033
  1147  014D                     l1035:	
  1148  014D  1003               	clrc
  1149  014E  0DA2               	rlf	___lbdiv@quotient,f
  1150  014F  0873               	movf	___lbdiv@divisor,w
  1151  0150  0220               	subwf	___lbdiv@dividend,w
  1152  0151  1C03               	skipc
  1153  0152  2957               	goto	L1
  1154  0153  0873               	movf	___lbdiv@divisor,w
  1155  0154  02A0               	subwf	___lbdiv@dividend,f
  1156  0155  1422               	bsf	___lbdiv@quotient,0
  1157  0156  1003               	clrc
  1158  0157                     L1:	
  1159  0157  0CF3               	rrf	___lbdiv@divisor,f
  1160  0158  3001               	movlw	1
  1161  0159  02A1               	subwf	___lbdiv@counter,f
  1162  015A  1D03               	btfss	3,2
  1163  015B  294D               	goto	l1035
  1164  015C                     l1045:	
  1165  015C  0822               	movf	___lbdiv@quotient,w
  1166  015D  0008               	return
  1167  015E                     __end_of___lbdiv:	
  1168                           
  1169                           	psect	text4
  1170  0173                     __ptext4:	
  1171 ;; *************** function ___bmul *****************
  1172 ;; Defined at:
  1173 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;  multiplier      1    wreg     unsigned char 
  1176 ;;  multiplicand    1    3[COMMON] unsigned char 
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;  multiplier      1    6[COMMON] unsigned char 
  1179 ;;  product         1    5[COMMON] unsigned char 
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  1    wreg      unsigned char 
  1182 ;; Registers used:
  1183 ;;		wreg, status,2, status,0
  1184 ;; Tracked objects:
  1185 ;;		On entry : 300/0
  1186 ;;		On exit  : 300/0
  1187 ;;		Unchanged: 300/0
  1188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1189 ;;      Params:         1       0       0       0       0
  1190 ;;      Locals:         2       0       0       0       0
  1191 ;;      Temps:          1       0       0       0       0
  1192 ;;      Totals:         4       0       0       0       0
  1193 ;;Total ram usage:        4 bytes
  1194 ;; Hardware stack levels used:    1
  1195 ;; Hardware stack levels required when called:    1
  1196 ;; This function calls:
  1197 ;;		Nothing
  1198 ;; This function is called by:
  1199 ;;		_main
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203                           
  1204                           ;psect for function ___bmul
  1205  0173                     ___bmul:	
  1206                           
  1207                           ;incstack = 0
  1208                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1209                           ;___bmul@multiplier stored from wreg
  1210  0173  00F6               	movwf	___bmul@multiplier
  1211  0174  01F5               	clrf	___bmul@product
  1212  0175                     l877:	
  1213  0175  1C76               	btfss	___bmul@multiplier,0
  1214  0176  297B               	goto	l881
  1215  0177  0873               	movf	___bmul@multiplicand,w
  1216  0178  00F4               	movwf	??___bmul
  1217  0179  0874               	movf	??___bmul,w
  1218  017A  07F5               	addwf	___bmul@product,f
  1219  017B                     l881:	
  1220  017B  1003               	clrc
  1221  017C  0DF3               	rlf	___bmul@multiplicand,f
  1222  017D  1003               	clrc
  1223  017E  0CF6               	rrf	___bmul@multiplier,f
  1224  017F  0876               	movf	___bmul@multiplier,w
  1225  0180  1D03               	btfss	3,2
  1226  0181  2975               	goto	l877
  1227  0182  0875               	movf	___bmul@product,w
  1228  0183  0008               	return
  1229  0184                     __end_of___bmul:	
  1230                           
  1231                           	psect	text5
  1232  0184                     __ptext5:	
  1233 ;; *************** function _InitApp *****************
  1234 ;; Defined at:
  1235 ;;		line 24 in file "user.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;		None
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;		None
  1240 ;; Return value:  Size  Location     Type
  1241 ;;                  1    wreg      void 
  1242 ;; Registers used:
  1243 ;;		wreg, status,2
  1244 ;; Tracked objects:
  1245 ;;		On entry : B00/0
  1246 ;;		On exit  : B00/100
  1247 ;;		Unchanged: 800/0
  1248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1249 ;;      Params:         0       0       0       0       0
  1250 ;;      Locals:         0       0       0       0       0
  1251 ;;      Temps:          0       0       0       0       0
  1252 ;;      Totals:         0       0       0       0       0
  1253 ;;Total ram usage:        0 bytes
  1254 ;; Hardware stack levels used:    1
  1255 ;; Hardware stack levels required when called:    1
  1256 ;; This function calls:
  1257 ;;		Nothing
  1258 ;; This function is called by:
  1259 ;;		_main
  1260 ;; This function uses a non-reentrant model
  1261 ;;
  1262                           
  1263                           
  1264                           ;psect for function _InitApp
  1265  0184                     _InitApp:	
  1266                           
  1267                           ;user.c: 26: ANSEL = 0x00;
  1268                           
  1269                           ;incstack = 0
  1270                           ; Regs used in _InitApp: [wreg+status,2]
  1271  0184  1683               	bsf	3,5	;RP0=1, select bank1
  1272  0185  019B               	clrf	27	;volatile
  1273                           
  1274                           ;user.c: 28: TRISA = 0xF8;
  1275  0186  30F8               	movlw	248
  1276  0187  0085               	movwf	5	;volatile
  1277                           
  1278                           ;user.c: 29: TRISB = 0x00;
  1279  0188  0186               	clrf	6	;volatile
  1280                           
  1281                           ;user.c: 31: IRCF2 = 1;
  1282  0189  170F               	bsf	15,6	;volatile
  1283                           
  1284                           ;user.c: 32: IRCF1 = 1;
  1285  018A  168F               	bsf	15,5	;volatile
  1286                           
  1287                           ;user.c: 33: IRCF0 = 0;
  1288  018B  120F               	bcf	15,4	;volatile
  1289                           
  1290                           ;user.c: 35: TMR1ON = 1;
  1291  018C  1283               	bcf	3,5	;RP0=0, select bank0
  1292  018D  1410               	bsf	16,0	;volatile
  1293                           
  1294                           ;user.c: 36: TMR1CS = 0;
  1295  018E  1090               	bcf	16,1	;volatile
  1296                           
  1297                           ;user.c: 38: TMR1IE = 1;
  1298  018F  1683               	bsf	3,5	;RP0=1, select bank1
  1299  0190  140C               	bsf	12,0	;volatile
  1300                           
  1301                           ;user.c: 39: PEIE = 1;
  1302  0191  170B               	bsf	11,6	;volatile
  1303                           
  1304                           ;user.c: 40: GIE = 1;
  1305  0192  178B               	bsf	11,7	;volatile
  1306  0193  0008               	return
  1307  0194                     __end_of_InitApp:	
  1308                           
  1309                           	psect	text6
  1310  0194                     __ptext6:	
  1311 ;; *************** function _ConfigureOscillator *****************
  1312 ;; Defined at:
  1313 ;;		line 18 in file "system.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;		None
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		None
  1322 ;; Tracked objects:
  1323 ;;		On entry : B00/0
  1324 ;;		On exit  : B00/0
  1325 ;;		Unchanged: B00/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1327 ;;      Params:         0       0       0       0       0
  1328 ;;      Locals:         0       0       0       0       0
  1329 ;;      Temps:          0       0       0       0       0
  1330 ;;      Totals:         0       0       0       0       0
  1331 ;;Total ram usage:        0 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; Hardware stack levels required when called:    1
  1334 ;; This function calls:
  1335 ;;		Nothing
  1336 ;; This function is called by:
  1337 ;;		_main
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           
  1342                           ;psect for function _ConfigureOscillator
  1343  0194                     _ConfigureOscillator:	
  1344                           
  1345                           ;incstack = 0
  1346                           ; Regs used in _ConfigureOscillator: []
  1347  0194  0008               	return
  1348  0195                     __end_of_ConfigureOscillator:	
  1349                           
  1350                           	psect	text7
  1351  015E                     __ptext7:	
  1352 ;; *************** function _isr *****************
  1353 ;; Defined at:
  1354 ;;		line 27 in file "interrupts.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;		None
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;		None
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      void 
  1361 ;; Registers used:
  1362 ;;		wreg, status,2, status,0
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 300/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1368 ;;      Params:         0       0       0       0       0
  1369 ;;      Locals:         0       0       0       0       0
  1370 ;;      Temps:          3       0       0       0       0
  1371 ;;      Totals:         3       0       0       0       0
  1372 ;;Total ram usage:        3 bytes
  1373 ;; Hardware stack levels used:    1
  1374 ;; This function calls:
  1375 ;;		Nothing
  1376 ;; This function is called by:
  1377 ;;		Interrupt level 1
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           
  1382                           ;psect for function _isr
  1383  015E                     _isr:	
  1384                           
  1385                           ;interrupts.c: 30: if (TMR1IF == 1) {
  1386  015E  1283               	bcf	3,5	;RP0=0, select bank0
  1387  015F  1303               	bcf	3,6	;RP1=0, select bank0
  1388  0160  1C0C               	btfss	12,0	;volatile
  1389  0161  296C               	goto	i1l12
  1390                           
  1391                           ;interrupts.c: 31: TMR1IF = 0;
  1392  0162  100C               	bcf	12,0	;volatile
  1393                           
  1394                           ;interrupts.c: 34: TMR1 = 0xFFFF - 0xC350;
  1395  0163  303C               	movlw	60
  1396  0164  008F               	movwf	15	;volatile
  1397  0165  30AF               	movlw	175
  1398  0166  008E               	movwf	14	;volatile
  1399                           
  1400                           ;interrupts.c: 35: count++;
  1401  0167  3001               	movlw	1
  1402  0168  00F0               	movwf	??_isr
  1403  0169  0870               	movf	??_isr,w
  1404  016A  07FA               	addwf	_count,f
  1405                           
  1406                           ;interrupts.c: 36: TMR1IF = 0;
  1407  016B  100C               	bcf	12,0	;volatile
  1408  016C                     i1l12:	
  1409  016C  0872               	movf	??_isr+2,w
  1410  016D  008A               	movwf	10
  1411  016E  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  1412  016F  0083               	movwf	3
  1413  0170  0EFE               	swapf	126,f
  1414  0171  0E7E               	swapf	126,w
  1415  0172  0009               	retfie
  1416  0173                     __end_of_isr:	
  1417  007E                     btemp	set	126	;btemp
  1418  007E                     wtemp0	set	126
  1419                           
  1420                           	psect	intentry
  1421  0004                     __pintentry:	
  1422                           ;incstack = 0
  1423                           ; Regs used in _isr: [wreg+status,2+status,0]
  1424                           
  1425  0004                     interrupt_function:	
  1426  007E                     saved_w	set	btemp
  1427  0004  00FE               	movwf	btemp
  1428  0005  0E03               	swapf	3,w
  1429  0006  00F1               	movwf	??_isr+1
  1430  0007  080A               	movf	10,w
  1431  0008  00F2               	movwf	??_isr+2
  1432  0009  118A  295E         	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      5       8
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___bmul
    _main->___lbmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___lbdiv
    _main->___lbmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1059
                                              3 BANK0      2     2      0
                _ConfigureOscillator
                            _InitApp
                             ___bmul
                            ___lbdiv
                            ___lbmod
                            _display
 ---------------------------------------------------------------------------------
 (1) _display                                              2     0      2     181
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) ___lbmod                                              7     6      1     362
                                              3 COMMON     4     3      1
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              5     4      1     371
                                              3 COMMON     2     1      1
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     145
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   ___bmul
   ___lbdiv
   ___lbmod
   _display

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      13       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5       8       5       10.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      13      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Apr 10 15:53:15 2019

              ___bmul@product 0075                   __CFG_CP$OFF 0000                            l53 0119  
                         l502 0137                           l831 00E0                           l841 00EF  
                         l833 00E3                           l825 00D7                           l843 00F1  
                         l835 00E6                           l827 00DA                           l837 00E9  
                         l829 00DD                           l839 00EC                           l847 00F4  
                         l881 017B                           l877 0175                           _GIE 005F  
                         _RA4 002C                  __CFG_CPD$OFF 0000                           u375 0123  
                         u477 006C                           u487 00A3                           u497 00CB  
                         _isr 015E                  __CFG_IESO$ON 0000                  __CFG_LVP$OFF 0000  
                        l1033 0144                          l1035 014D                          l1045 015C  
                        l1053 0120                          l1125 0049                          l1127 00D0  
                        l1083 0031                          l1149 00F9                          l1077 002B  
                        l1069 001F                          l1089 003A                          ?_isr 0070  
                        _PEIE 005E                          i1l12 016C                          _TMR1 000E  
                __CFG_WRT$OFF 0000                 __CFG_FCMEN$ON 0000                          _main 0019  
                        _temp 0078                          btemp 007E                 __CFG_BOREN$ON 0000  
                        start 000B             ___bmul@multiplier 0076                 __CFG_MCLRE$ON 0000  
             __end_of_InitApp 0194                         ??_isr 0070                         ?_main 0070  
             __end_of___lbdiv 015E                 __CFG_WDTE$OFF 0000               __end_of___lbmod 013D  
                       _ANSEL 009B                         _IRCF0 047C                         _IRCF1 047D  
                       _IRCF2 047E                         _PORTA 0005                         _PORTB 0006  
                       _TRISA 0085                         _TRISB 0086           _ConfigureOscillator 0194  
              __CFG_CCPMX$RB0 0000               __end_of_display 011A                         _count 007A  
                       _temp2 0025                         pclath 000A                         status 0003  
                       wtemp0 007E               ___lbdiv@divisor 0073               ___lbdiv@counter 0021  
        ?_ConfigureOscillator 0070               __initialization 000D                  __end_of_main 00D6  
                      ??_main 0023                        _TMR1IE 0460                        _TMR1IF 0060  
                      _TMR1CS 0081                        _TMR1ON 0080                     ??_InitApp 0073  
       ??_ConfigureOscillator 0073                __CFG_PWRTE$OFF 0000                        ___bmul 0173  
                   ??___lbdiv 0074                     ??___lbmod 0074                        _buffer 0026  
                   ??_display 0075                        saved_w 007E              ___lbdiv@dividend 0020  
             ___lbmod@divisor 0073       __end_of__initialization 0016               ___lbmod@counter 0021  
         ___bmul@multiplicand 0073                __pcstackCOMMON 0070              ___lbdiv@quotient 0022  
                  __pbssBANK0 0025                display@DISPLAY 0073                    __pmaintext 0019  
                     ?___bmul 0073                    __pintentry 0004                       _DISPLAY 0077  
                     _InitApp 0184               __size_of___bmul 0011                       ___lbdiv 013D  
                     ___lbmod 011A                       __ptext1 00D6                       __ptext2 011A  
                     __ptext3 013D                       __ptext4 0173                       __ptext5 0184  
                     __ptext6 0194                       __ptext7 015E                       _display 00D6  
                __size_of_isr 0015          end_of_initialization 0016              ___lbmod@dividend 0020  
 __end_of_ConfigureOscillator 0195                   ___lbmod@rem 0022                __end_of___bmul 0184  
         start_initialization 000D                   __end_of_isr 0173                      ??___bmul 0074  
                 __pbssCOMMON 0077                     ___latbits 0001                 __pcstackBANK0 0020  
                    ?_InitApp 0070                      ?___lbdiv 0073                      ?___lbmod 0073  
                   _heartbeat 0027                      ?_display 0073             interrupt_function 0004  
                   _prevValue 0079              __size_of_InitApp 0010              __size_of___lbdiv 0021  
            __size_of___lbmod 0023              __size_of_display 0044                 __size_of_main 00BD  
__size_of_ConfigureOscillator 0001                      intlevel1 0000            __CFG_FOSC$INTOSCIO 0000  
